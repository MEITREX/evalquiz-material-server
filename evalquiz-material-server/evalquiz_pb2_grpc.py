# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import evalquiz_pb2 as evalquiz__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class PipelineServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IterateConfig = channel.unary_stream(
                '/PipelineServer/IterateConfig',
                request_serializer=evalquiz__pb2.InternalConfig.SerializeToString,
                response_deserializer=evalquiz__pb2.PipelineStatus.FromString,
                )


class PipelineServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def IterateConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PipelineServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IterateConfig': grpc.unary_stream_rpc_method_handler(
                    servicer.IterateConfig,
                    request_deserializer=evalquiz__pb2.InternalConfig.FromString,
                    response_serializer=evalquiz__pb2.PipelineStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'PipelineServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PipelineServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def IterateConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/PipelineServer/IterateConfig',
            evalquiz__pb2.InternalConfig.SerializeToString,
            evalquiz__pb2.PipelineStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MaterialServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadMaterial = channel.unary_unary(
                '/MaterialServer/UploadMaterial',
                request_serializer=evalquiz__pb2.MaterialUploadData.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteMaterial = channel.unary_unary(
                '/MaterialServer/DeleteMaterial',
                request_serializer=evalquiz__pb2.String.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetMaterialHashes = channel.unary_unary(
                '/MaterialServer/GetMaterialHashes',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=evalquiz__pb2.ListOfStrings.FromString,
                )
        self.GetMaterial = channel.unary_unary(
                '/MaterialServer/GetMaterial',
                request_serializer=evalquiz__pb2.String.SerializeToString,
                response_deserializer=evalquiz__pb2.LectureMaterial.FromString,
                )


class MaterialServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UploadMaterial(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMaterial(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMaterialHashes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMaterial(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MaterialServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadMaterial': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadMaterial,
                    request_deserializer=evalquiz__pb2.MaterialUploadData.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteMaterial': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMaterial,
                    request_deserializer=evalquiz__pb2.String.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetMaterialHashes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMaterialHashes,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=evalquiz__pb2.ListOfStrings.SerializeToString,
            ),
            'GetMaterial': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMaterial,
                    request_deserializer=evalquiz__pb2.String.FromString,
                    response_serializer=evalquiz__pb2.LectureMaterial.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'MaterialServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MaterialServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UploadMaterial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MaterialServer/UploadMaterial',
            evalquiz__pb2.MaterialUploadData.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMaterial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MaterialServer/DeleteMaterial',
            evalquiz__pb2.String.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMaterialHashes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MaterialServer/GetMaterialHashes',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            evalquiz__pb2.ListOfStrings.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMaterial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MaterialServer/GetMaterial',
            evalquiz__pb2.String.SerializeToString,
            evalquiz__pb2.LectureMaterial.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
